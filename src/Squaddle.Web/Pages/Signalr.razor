@page "/signalr"

@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager NavigationManager

<h1>@hubConnection.State</h1>

<div class="form-group">
    <label>
        User:
        <input @bind="userInput" />
    </label>
</div>
<div class="form-group">
    <label>
        Message:
        <input @bind="messageInput" size="50" />
    </label>
</div>
<button @onclick="SendAsync" disabled="@(!IsConnected)">Send</button>

<hr>

<ul id="messagesList">
    @foreach (var message in messages)
    {
        <li>@message.Name: @message.Message</li>
    }
</ul>

@code {
    private HubConnection hubConnection;
    private List<ClientMessage> messages = new List<ClientMessage>();
    private string userInput;
    private string messageInput;
    private readonly HttpClient _httpClient = new HttpClient();

    private readonly string functionAppBaseUri = "http://localhost:7071/api/";
    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder()
            .WithUrl(functionAppBaseUri)
            .Build();

        hubConnection.On<ClientMessage>("clientMessage", (clientMessage) =>
        {
            messages.Add(clientMessage);
            StateHasChanged();
        });

        await hubConnection.StartAsync();
    }

    async Task SendAsync() {

        var msg = new ClientMessage
        {
            Name = userInput,
            Message = messageInput
        };

        //await hubConnection.SendAsync("messages", msg);
        await _httpClient.PostAsJsonAsync($"{functionAppBaseUri}messages", msg);
        messageInput = string.Empty;
        StateHasChanged();
    }

    public bool IsConnected =>
        hubConnection.State == HubConnectionState.Connected;

    public class ClientMessage
    {
        public string Name { get; set; }
        public string Message { get; set; }
    }
}